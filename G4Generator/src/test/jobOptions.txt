//##############################################################
//
// Job options file for G4Generator test
// 
// $Header$

ApplicationMgr.DLLs   = { "GaudiAlg", "FluxSvc", "GlastSvc"};

ApplicationMgr.ExtSvc = { 
    "GlastEventSelector/EventSelector" , 
    "EventCnvSvc", 
    "FluxSvc", "GlastDetSvc" 
    };

EventPersistencySvc.CnvServices = {"EventCnvSvc"};
EventSelector.Input = "NONE";

ApplicationMgr.TopAlg = { 
    "G4Generator",
    "G4TestAlg"};

// make sure that this service does not try to instantatiate the (gismo) detector
GlastDetSvc.PersistencyFile="(none)";

// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel      = 2;

// Append to a list of source library documents
FluxSvc.source_lib += {"$(G4GENERATORROOT)/src/test/test_sources.xml"};

// ask for a source that is in the library
//G4Generator.source_name="gamma_patch_for_G4";
G4Generator.source_name="muon_pencil";
//G4Generator.source_name="gamma_test";

// optionally specify a top volume to create
//G4Generator.topVolume="CALLayer";
//G4Generator.topVolume="CALLayers";
//G4Generator.topVolume="oneTower";

// commands to run before each event. (doesn't work?)
//G4Generator.UIcommands+={"/run/verbose 3"};
//G4Generator.UIcommands+={"/event/verbose 3"};
//G4Generator.UIcommands+={"/tracking/verbose 3"};

ApplicationMgr.EvtMax = 1;


//==============================================================
//
// End of job options file
//
//##############################################################

