//##############################################################
//
//  Job options file for CalXtalResponse test 


// primary DLLs

ApplicationMgr.DLLs+= {"CalibSvc",
    "CalXtalResponse",
    "CalDigi"};

// ----------------------------
// setup basic event loop stuff
//
ApplicationMgr.ExtSvc = { 
  "EventCnvSvc"
};                    
EventPersistencySvc.CnvServices = {"EventCnvSvc"};
EventSelector.Input = "NONE";


// ----------------------------
//  topalg
//
ApplicationMgr.TopAlg = {
  "test_CalXtalResponse"
};        


// ----------------------------
//  Geometry definition
//
ApplicationMgr.DLLs += {"GlastSvc"};
ApplicationMgr.ExtSvc += { "GlastDetSvc"};
GlastDetSvc.topVolume="LAT"; 

// purposely pick  8 tower lat to check cases where towers aren't
// present (needed to process older data)
GlastDetSvc.xmlfile="$(XMLGEODBSXMLPATH)/latAssembly/lat8TowerSegVols.xml";
GlastDetSvc.visitorMode="recon";

// Start up a CalibDataSvc 
ApplicationMgr.ExtSvc += {"CalibDataSvc"};

ApplicationMgr.ExtSvc += {"CalibMySQLCnvSvc", "CalibXmlCnvSvc" };

DetectorPersistencySvc.CnvServices += {"CalibMySQLCnvSvc"};
DetectorPersistencySvc.CnvServices += {"CalibXmlCnvSvc"};

// CalibDataSvc properties 
// Storage type of 14 corresponds to MYSQL
CalibDataSvc.CalibInstrumentName = "LAT";
CalibDataSvc.CalibStorageType    = 14;
CalibDataSvc.CalibRootName       = "Calib";
CalibDataSvc.CalibFlavorList     = {"ideal","CalXtalResponse_test_II"};


///////////////////////////////////////////////
//-- test w/ real calibrations (default)   --//
///////////////////////////////////////////////
ApplicationMgr.ExtSvc += {"CalCalibSvc/CalCalibSvc"};
CalCalibSvc.DefaultFlavor  = "CalXtalResponse_test_II";
CalDigiAlg.ConfigSvcName = "";
CalDigiAlg.CreateDiagnosticData = "1";
// disable noise
ToolSvc.CalSignalTool.enableNoise = false;

test_CalXtalResponse.pedTXTPath = "$(CALXTALRESPONSEROOT)/src/test/cxr_test_ped.txt";
test_CalXtalResponse.cidac2adcTXTPath = "$(CALXTALRESPONSEROOT)/src/test/cxr_test_cidac2adc.txt";
test_CalXtalResponse.mpdTXTPath = "$(CALXTALRESPONSEROOT)/src/test/cxr_test_mpd.txt";
test_CalXtalResponse.asymTXTPath = "$(CALXTALRESPONSEROOT)/src/test/cxr_test_asym.txt";
test_CalXtalResponse.tholdCITXTPath = "$(CALXTALRESPONSEROOT)/src/test/cxr_test_tholdci.txt";



/////////////////////////////////////
//-- tests w/ ideal calibrations --//
/////////////////////////////////////
ApplicationMgr.ExtSvc += {"CalCalibSvc/CalCalibSvcIdeal"};
CalCalibSvcIdeal.DefaultFlavor = "ideal"; // default for all calib types

test_CalXtalResponse.pedTXTPathIdeal = "$(CALXTALRESPONSEROOT)/src/test/muonPeds.ideal.txt";
test_CalXtalResponse.cidac2adcTXTPathIdeal = "$(CALXTALRESPONSEROOT)/src/test/cidac2adc.ideal.txt";
test_CalXtalResponse.mpdTXTPathIdeal = "$(CALXTALRESPONSEROOT)/src/test/mpd.ideal.txt";
test_CalXtalResponse.asymTXTPathIdeal = "$(CALXTALRESPONSEROOT)/src/test/muonAsym.ideal.txt";
test_CalXtalResponse.tholdCITXTPathIdeal = "$(CALXTALRESPONSEROOT)/src/test/tholdci.ideal.txt";

////////////////////////////////
//-- CalFailureModeSvc test --//
////////////////////////////////
ApplicationMgr.ExtSvc += {"CalFailureModeSvc"};
CalFailureModeSvc.towerAfeeList= {"10_2"}; 
CalFailureModeSvc.towerList= {"11"}; 
CalFailureModeSvc.towerControllerList= {"4_2"}; 

//==============================================================
//
// End of job options file
//
//##############################################################

///////////////////////////////////////////
// IDEAL CALIB ONLY TEST (NO INET/MySQL) //
///////////////////////////////////////////
// CalCalibSvc.DefaultFlavor = "ideal";
// test_CalXtalResponse.pedTXTPath = "$(CALXTALRESPONSEROOT)/src/test/muonPeds.ideal.txt";
// test_CalXtalResponse.cidac2adcTXTPath = "$(CALXTALRESPONSEROOT)/src/test/cidac2adc.ideal.txt";
// test_CalXtalResponse.mpdTXTPath = "$(CALXTALRESPONSEROOT)/src/test/mpd.ideal.txt";
// test_CalXtalResponse.asymTXTPath = "$(CALXTALRESPONSEROOT)/src/test/muonAsym.ideal.txt";
// test_CalXtalResponse.tholdCITXTPath = "$(CALXTALRESPONSEROOT)/src/test/tholdci.ideal.txt";
// GlastDetSvc.xmlfile="$(XMLGEODBSXMLPATH)/flight/flightSegVols.xml";

// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel = 3;
ApplicationMgr.EvtMax  = 200;
