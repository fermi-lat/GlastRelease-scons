# -*- python -*-
#$Header$
Import('baseEnv')
from fermidebug import fdebug

baseEnv.AppendUnique(CPPDEFINES = ['GlastRelease'])

vstring = 'OBF_' + (str(baseEnv['obfversion'])).replace('-', '_')
while vstring.count('_') > 3:
    ix = vstring.rfind('_')
    vstring = vstring[:ix]
    
    
baseEnv.AppendUnique(CPPDEFINES = vstring)

#########################                                                                                                                                                                                
# GlastRelease Builders #                                                                                                                                                                                
#########################                                                                                                                                                                                
def GaudiProgram(env, name, source, test, package=''):
        env.Tool('facilitiesLib')
	if package != '':
		ourdef = 'PACKAGE_NAME=\\"' + package + '\\"' 
		env.AppendUnique(CPPDEFINES = [ourdef])
        setPriorityObject = ''
        if baseEnv['PLATFORM'] == 'win32':
                setPriorityObject = baseEnv.Object('#gr_app/src/setPriority.cxx')
        if test == 1:
		env.Install(target='src',
			    source='#gr_app/src/TestGlastMain.cxx')
		testObject = env.Object('src/TestGlastMain.cxx')
                return env.Program(name, source + testObject + setPriorityObject)
	else:
		env.Install(target='src',
			    source='#gr_app/src/GlastMain.cxx')
		mainObjects = [env.Object('src/GlastMain.cxx')]
                if env['PLATFORM'] == 'win32':
                    objdir = '#/lib/' + env['VARIANT']
                    mainObjects += [objdir + '/WinMain.obj', 
                                    objdir + '/wingui.res', setPriorityObject]

                return env.Program(name, source + mainObjects)

baseEnv.AddMethod(GaudiProgram)
